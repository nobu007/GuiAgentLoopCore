[tool]
[tool.poetry]
authors = ["Daisuke Jinno <klvx01@gmail.com>"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.6',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
]
description = "Core logic of GUI and LLM agent bridge, including loop and controls.."
homepage = "https://github.com/nobu007/GuiAgentLoopCore"
license = "MIT"
name = "GuiAgentLoopCore"
packages = [
  {include = "gui_agent_loop_core"},
  {include = "tests", format = "sdist"},
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
bump2version = {version = "*", optional = true}
click = {version = "^8.1.7", optional = true}
flake8 = {version = "^7.1.1", optional = true}
flake8-docstrings = {version = "^1.7.0", optional = true}
gradio = {version = "^4.44.0", optional = true}
gradio_client = {version = "^1.3.0", optional = true}
isort = {version = "^5.13.2", optional = true}
mkdocs = {version = "^1.6.1", optional = true}
mkdocs-autorefs = {version = "*", optional = true}
mkdocs-include-markdown-plugin = {version = "^6.2.2", optional = true}
mkdocs-material = {version = "^9.5.36", optional = true}
mkdocs-material-extensions = {version = "^1.3.1", optional = true}
mkdocstrings = {version = "*", optional = true}
mypy = {version = "^1.11.2", optional = true}
pip = {version = "^24.2", optional = true}
pre-commit = {version = "*", optional = true}
pytest = {version = "^8.3.3", optional = true}
pytest-cov = {version = "^5.0.0", optional = true}
python = ">=3.9,<4.0"
ruff = {version = "^0.6.2", optional = true}
toml = {version = "*", optional = true}
tox = {version = "^4.20.0", optional = true}
twine = {version = "*", optional = true}
virtualenv = {version = "^20.26.5", optional = true}

[tool.poetry.extras]
test = [
  "pytest",
  "black",
  "isort",
  "mypy",
  "flake8",
  "flake8-docstrings",
  "pytest-cov",
]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
  "mkdocs",
  "mkdocs-include-markdown-plugin",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocs-material-extension",
  "mkdocs-autorefs",
]

[tool.poetry.scripts]
GuiAgentLoopCore = 'gui_agent_loop_core.cli:main'

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
multi_line_output = 3
skip_gitignore = true
use_parentheses = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.pylint.messages_control]
disable = [
  "global-statement",
  "missing-docstring",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
